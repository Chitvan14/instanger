{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","Story.js","Suggestion.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","forwardRef","ref","user","username","postId","imageUrl","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","style","height","width","text","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","setUrl","progress","setProgress","setCaption","max","Input","files","Button","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","Story","Suggestion","suggestionUsername","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","setUsername","email","setEmail","password","setPassword","setUser","open","setOpen","registerOpen","setRegisterOpen","onAuthStateChanged","authUser","updateProfile","id","post","Modal","onClose","signInWithEmailAndPassword","catch","alert","message","createUserWithEmailAndPassword","signOut","slice","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44d73893.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBaPD4z4mpAtYSo_IdN33FxkoaDz0fEpUQ\",\n  authDomain: \"instanger-78429.firebaseapp.com\",\n  projectId: \"instanger-78429\",\n  storageBucket: \"instanger-78429.appspot.com\",\n  messagingSenderId: \"463920685890\",\n  appId: \"1:463920685890:web:8ed83f9f6ee415ae745edb\",\n  measurementId: \"G-YH3WK15VEE\"\n});\n\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import React, { useState, useEffect, forwardRef } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\n\nconst Post = forwardRef(\n  ({ user, username, postId, imageUrl, caption }, ref) => {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState(\"\");\n\n    useEffect(() => {\n      let unsubscribe;\n      if (postId) {\n        unsubscribe = db\n          .collection(\"posts\")\n          .doc(postId)\n          .collection(\"comments\")\n          .orderBy('timestamp','desc')\n          .onSnapshot((snapshot) => {\n            setComments(snapshot.docs.map((doc) => doc.data()));\n          });\n      }\n\n      return () => {\n        unsubscribe();\n      };\n    }, [postId]);\n\n    const postComment = (e) => {\n      e.preventDefault();\n\n      db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n        text: comment,\n        username: user.displayName,\n        timestamp : firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setComment(\"\");\n    };\n\n    return (\n      <div className=\"post\" ref={ref}>\n        <div className=\"post__header\">\n          <Avatar\n            className=\"post__avatar\"\n            alt={username}\n            src={`https://avatars.dicebear.com/api/human/${username}.svg?mood[]=happy`}\n          />\n          <h5>{username}</h5>\n        </div>\n\n        <img className=\"post__image\" src={imageUrl} alt=\"post\" />\n        <h4 className=\"post__text\">\n          {username} <span className=\"post__caption\">{caption}</span>\n        </h4>\n\n        <div className=\"post__comments\">\n       \n          {comments.map((comment) => (\n          <div className=\"post__comments__div\">\n <Avatar\n             className=\"post__comments__avtar\"\n             alt={comment.username}\n             style={{ height: '25px', width: '25px' }}\n             src={`https://avatars.dicebear.com/api/human/${comment.username}.svg?mood[]=happy`}\n           />\n            <h5>\n              <strong>{comment.username}</strong> {comment.text}\n            </h5>\n           \n          </div>\n            \n           \n          ))}\n        </div>\n\n        {user && (\n          <form className=\"post__commentBox\">\n           \n            <input\n              className=\"post__input\"\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <button\n              disabled={!comment}\n              className=\"post__button\"\n              type=\"submit\"\n              onClick={postComment}\n            >\n              Post\n            </button>\n          </form>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default Post;\n","import React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { storage, db } from \"./firebase\";\nimport \"./ImageUpload.css\";\nimport { Input, Button } from \"@material-ui/core\";\n\nconst ImageUpload = ({ username }) => {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            setUrl(url);\n\n            // post image inside db\n            db.collection(\"posts\").add({\n              imageUrl: url,\n              caption: caption,\n              username: username,\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n\n            setProgress(0);\n            setCaption(\"\");\n            setImage(null);\n          });\n      }\n    );\n  };\n\n  return (\n    <div className=\"imageupload\">\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\n      <Input\n        placeholder=\"Enter a caption\"\n        value={caption}\n        onChange={(e) => setCaption(e.target.value)}\n      />\n      <div className=\"imageupload__input\">\n        <input  type=\"file\" onChange={handleChange} />\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\n          Upload\n        </Button>\n      </div>\n\n      <br />\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, {forwardRef } from 'react'\nimport './Story.css';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst Story = forwardRef(\n    ({username}, ref) => {\n    return (\n        <div className=\"story\" ref={ref}>\n           \n          <Avatar\n            className=\"story__avatar\"\n            alt={username}\n            src={`https://avatars.dicebear.com/api/human/${username}.svg?mood[]=happy`}\n          />\n          <p>{username}</p>\n\n        </div>\n    )\n    })\n\nexport default Story\n","import React from \"react\";\nimport \"./Suggestion.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nfunction Suggestion({ suggestionUsername }) {\n  return (\n    <>\n    <div className=\"suggestion\">\n      <Avatar\n        className=\"suggestion__avatar\"\n        alt={suggestionUsername}\n        src={`https://avatars.dicebear.com/api/human/${suggestionUsername}.svg?mood[]=happy`}\n      />\n      <h5>{suggestionUsername}</h5>\n      <p>Follow</p>\n    \n    </div>\n     \n    </>\n  );\n}\n\nexport default Suggestion;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport ImageUpload from \"./ImageUpload\";\nimport { db, auth } from \"./firebase\";\nimport { Button, Avatar, makeStyles, Modal, Input } from \"@material-ui/core\";\nimport FlipMove from \"react-flip-move\";\nimport InstagramEmbed from \"react-instagram-embed\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\n// import SearchIcon from \"@material-ui/icons/Search\";\nimport Story from \"./Story\";\nimport Suggestion from \"./Suggestion\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    height: \"300px\",\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    height: 200,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user keeps on logged in...\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // dont update username\n        } else {\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() })))\n      );\n  }, []);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpen(false);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setRegisterOpen(false);\n  };\n  // const getData=()=>{\n\n  // }\n  // const [users, setUsers] = useState([]);\n  // const getData = async () =>{\n  //   const response = await fetch('https://randomuser.me/api/')\n  //   setUsers(await response.json())\n\n  // }\n\n  // useEffect(() => {\n  //   getData();\n  // }, []);\n  // console.log(getData)\n\n  //   useEffect(()=>{\n  //     setGetData( fetch('',{headers:{ 'Content-Type': 'application/json',\n  //     'Accept': 'application/json'}}).then((res)=>{\n  // return res.json()\n  //     }))\n  //   },[])\n\n  //   const urlUsername = username.toString().toLowerCase();\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__login\">\n            <center>\n              <img className=\"app__headerImage\" src=\"instanger.png\" alt=\"\" />\n            </center>\n\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={handleLogin}>Login</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__login\">\n            <center>\n              <img className=\"app__headerImage\" src=\"instanger.png\" alt=\"\" />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button onClick={handleRegister}>Register</Button>\n          </form>\n        </div>\n      </Modal>\n      <div className=\"app__header\">\n        <img className=\"app__headerImage\" src=\"instanger.png\" alt=\"\" />\n        <div className=\"app__headerCenter\">\n          <input type=\"text\" className=\"\" placeholder=\"Search\" />\n        </div>\n\n        {user?.displayName ? (\n          <div className=\"app__headerRight\">\n            <HomeIcon className=\"app__headerRight__icons\" />\n            <ChatOutlinedIcon className=\"app__headerRight__icons\" />\n            <ExploreOutlinedIcon className=\"app__headerRight__icons\" />\n            <FavoriteBorderOutlinedIcon className=\"app__headerRight__icons\" />\n\n            <Avatar\n              className=\"app__headerAvatar\"\n              alt={user.displayName}\n              src={`https://avatars.dicebear.com/api/human/${user.displayName}.svg?mood[]=happy`}\n            />\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n          </div>\n        ) : (\n          <form className=\"app__loginHome\">\n            <Button onClick={() => setOpen(true)}>Login</Button>\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\n          </form>\n        )}\n      </div>\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          <div className=\"app__storyLeft\">\n            {posts.slice(-1).map(({ id, post }) => (\n              <Story username={post.username} key={id} />\n            ))}\n\n            <Story username=\"Aalia Boase\" />\n            <Story username=\"Ishita Bedi\" />\n            <Story username=\"Shresth Tandon\" />\n            <Story username=\"Mitra Deshmukh\" />\n            <Story username=\"Parth Gade\" />\n            <Story username=\"Ryka Singhal\" />\n            <Story username=\"Ankur Korpal\" />\n            <Story username=\"Niraj Golla\" />\n          </div>\n\n          <FlipMove>\n            {posts.map(({ id, post }) => (\n              <Post\n                user={user}\n                key={id}\n                postId={id}\n                username={post.username}\n                caption={post.caption}\n                imageUrl={post.imageUrl}\n              />\n            ))}\n          </FlipMove>\n        </div>\n        <div className=\"app__postsRight\">\n          {user?.displayName ? (\n            <div>\n              <div className=\"app__postsRight__top\">\n                <Avatar\n                  className=\"app__headerAvatar\"\n                  alt={user.displayName}\n                  src={`https://avatars.dicebear.com/api/human/${user.displayName}.svg?mood[]=happy`}\n                />\n                <div className=\"app__headerText\">\n                  <h5>{user.displayName}</h5>\n                  <h6>{user.email}</h6>\n                </div>\n              </div>\n              <div className=\"app__postsRight__bottom\">\n                <h5>Suggestions For You</h5>\n                <Suggestion suggestionUsername=\"Anaya Arora\" />\n                <Suggestion suggestionUsername=\"Trishna Dani\" />\n                <Suggestion suggestionUsername=\"Ankur Bhagat\" />\n                <Suggestion suggestionUsername=\"Valini Mall\" />\n                <Suggestion suggestionUsername=\"Avinash Krish\" />\n              </div>\n              <div className=\"suggestion__bottom\">\n                <p>About</p>\n                <p>• Help</p>\n                <p>• Press</p>\n                <p>• API</p>\n                <p>• Jobs</p>\n                <p>• Privacy</p>\n                <p>• Terms</p>\n                <p>• Locations</p>\n                <p>• Top</p>\n                <p>• Accounts</p>\n                <p>• Hashtags</p>\n                <p>• Language</p>\n                <h6>English © 2021 INSTANGER BY CHITVAN GARG</h6>\n              </div>\n            </div>\n          ) : (\n            <h4>Login To Upload ☝️</h4>\n          )}\n        </div>\n      </div>\n\n      {user?.displayName ? (\n        <div className=\"app__upload\">\n          <ImageUpload username={user.displayName} />\n        </div>\n      ) : (\n        <center></center>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}